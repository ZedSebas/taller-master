---
#- name: Instalar Mariadb en Rocky
#  apt:
#    name: mariadb-server, python3-PyMySQL, mariadb-client, python3-pip
#    state: latest
#  when: ansible_distribution == "Ubuntu"

- name: Instalar Mariadb en Ubuntu
  package:
    name: mariadb-server, python3-pip
    state: latest
  when: ansible_distribution == "Rocky"

- name: Install PyMySQL with pip
  pip:
    name: PyMySQL
    executable: pip3
    extra_args: --user
  when: ansible_distribution == "Rocky"

#- name: Configure mariadb to listen on all interfaces
#  lineinfile:
#    path: /etc/mysql/mariadb.conf.d/50-server.cnf
#    regexp: '^bind-address'
#    line: bind-address = 0.0.0.0
#  notify: Restart mariadb server
#  when: ansible_distribution == "Rocky"

- name: Iniciar y ejecutar Mariadb
  service:
    name: mariadb
    enabled: true
    state: started
  when: ansible_distribution == "Rocky"

- name: Establecer contrase√±a root
  mysql_user:
    login_user: root
    login_password: ""
    check_implicit_admin: yes
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
  loop:
    - 127.0.0.1
    - 192.168.10.6
    - localhost
  when: ansible_distribution == "Rocky"

- name: Set ~/.my.cnf file
  template: src=dotmy.cnf.j2 dest=/root/.my.cnf mode=0600
  when: ansible_distribution == "Rocky"

- name: Delete anonymous MySql user
  mysql_user: name="" host="{{ item }}" state=absent
  with_items:
    - localhost
    - "{{ ansible_nodename }}"
  when: ansible_distribution == "Rocky"

- name: Delete Hostname bases MySql user
  mysql_user: name=root host="{{ ansible_nodename }}" state=absent
  when: ansible_distribution == "Rocky"

- name: Copiar archivo de conexion
  copy:
    src: /home/ansible/database/files/app.properties
    dest: /opt/config
    mode: 0755
  when: ansible_distribution == "Rocky"

- name: Creacion de base de datos
  mysql_db:
    name: "{{ database }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: present
  when:
    - create_database
    - database is defined
    - ansible_distribution == "Rocky"

- name: Crear usuario para base de datos
  mysql_user:
    name: "{{ db_user_name }}"
    password: "{{ db_user_password }}"
    priv: "{{ database }}.*:{{ priviliges }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    state: present
  when:
    - create_database
    - database is defined
    - create_db_user
    - db_user_name is defined
    - ansible_distribution == "Rocky"

- name: Copiar archivo SQL
  copy:
    src: /home/ansible/database/files/tablas.sql
    dest: /tmp/
  when: 
    - import_sql_file
    - ansible_distribution == "Rocky"

- name: Ejecutar scipt SQL
  mysql_db:
    name: "{{ database }}"
    state: import
    target: /tmp/tablas.sql
    login_user: root
    login_password: "{{ mysql_root_password }}"
  when:
    - database is defined and create_database
    - import_sql_file
    - ansible_distribution == "Rocky"
